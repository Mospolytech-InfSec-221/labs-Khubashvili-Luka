#include <iostream> using namespace std;//функция для решения задачи 1 void bubbles(int* num, int size){    int temp;    for (int i = 0; i < size - 1; i++)    {        for (int j = 0; j < size - i - 1; j++)        {            if (num[j] > num[j + 1])            {                int temp = num[j];                num[j] = num[j + 1];                num[j + 1] = temp;            }        }    }    for (int i = 0; i < size; i++)    {        cout << num[i] << " ";    }    cout << endl;}//функция для решения задачи 2 void count(char* num, int size){    int kol = 26;    int j;    int P[kol] = { 0 };    for (int i = 0; i < size; i++)    {        j = int(num[i] - 'a');        P[j]++;    }    int i = 0;    j = 0;    while (j < kol)    {        if (P[j] > 0)        {            num[i] = char(int('a') + j);            i++;            P[j]--;        }        else        {            j++;        }    }    for (int i = 0; i < size; i++)    {        cout << num[i] << " ";    }    cout << endl;}int main(){    setlocale(LC_ALL, "Rus");    int choice = 0; // в этой переменной будет храниться выбор пользователя    cout << "введите размер массива\n";    int n;    cin >> n;    int A[n - 1];    char B[n - 1];    int menu;    cout << "Какого вида массив?\n 1.численный\n 2.буквенный\n";    cin >> menu;    if (menu == 1)    {        cout << "введите массив через пробел\n";        for (int i = 0; i < n; i++)        {            cin >> A[i];        }    }    else if (menu == 2)    {        cout << "введите массив через пробел\n";        for (int i = 0; i < n; i++)        {            cin >> B[i];        }    }    while (true) // непрерывный цикл     {        cout << "Что вы хотите выполнить? \n"            << "1. задание 1\n"            << "2. задание 2\n"            << "3. задание 3\n"            << "4. выход\n";        cin >> choice;        switch (choice)        {        case 1:        {            /*вызов функции для решения задания 1*/;            bubbles(A, n);            break;        }        case 2:        {            /*вызов функции для решения задания 2*/;            count(B, n);            break;        }                default:        {            return 0;        }        }    }}